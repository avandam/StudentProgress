@page
@model StudentProgress.Web.Pages.Progress.SummaryModel
@using Core.Entities

@{
  ViewData["Title"] = "Summary";

  string MilestoneRatingColor(Rating? rating, int currentIndex)
  {
    if (!rating.HasValue || currentIndex != (int) rating.Value)
    {
      return "light";
    }

    return rating switch
    {
      Rating.Undefined => "dark",
      Rating.Orienting => "danger",
      Rating.Beginning => "warning",
      Rating.Proficient => "success",
      Rating.Advanced => "primary",
      _ => "light"
      };
  }
}

<a asp-page="/StudentGroups/Index">Groups</a> >
<a asp-page="/StudentGroups/Details/Index" asp-route-id="@Model.Summary.GroupId">@Model.Summary.GroupName</a> >
<a asp-page="/Progress/Index" asp-route-groupId="@Model.Summary.GroupId"
   asp-route-studentId="@Model.Summary.StudentId">
  @Model.Summary.StudentName
</a> >
<span>Summary</span>

<h1>@Model.Summary.StudentName</h1>

<h2>Current milestone progress</h2>
@if (!Model.Summary.Milestones.Any())
{
  <p>No milestones in this group yet</p>
}

<table class="table">
  <thead>
  <tr>
    <th>Artefact</th>
    <th>Rating</th>
    <th># Updated</th>
    <th>Last comment</th>
  </tr>
  </thead>
  <tbody>

  @foreach (var learningOutcomeGrouping in Model.Summary.Milestones.ToLookup(m => m.LearningOutcome))
  {
    <tr>
      <td colspan="4">
        <h3>@learningOutcomeGrouping.Key</h3>
      </td>
    </tr>
    @foreach (var milestone in learningOutcomeGrouping.ToList())
    {
      <tr>
        <td>@milestone.Artefact</td>
        <td>
          <div class="btn-group btn-group-sm" role="group" aria-label="@milestone.Artefact">
            @for (int i = 1; i <= Enum.GetValues<Rating>().Length; i++)
            {
              <button type="button" class="btn btn-@MilestoneRatingColor(milestone.Rating, i)" disabled>@i</button>
            }
          </div>
        </td>
        <td>@milestone.TimesWorkedOn</td>
        <td class="feedback-text">@milestone.Comment</td>
      </tr>
    }
  }
  </tbody>
</table>