@page
@using StudentProgress.Core.Entities
@using StudentProgress.Core.UseCases
@model StudentProgress.Web.Pages.StudentGroups.Details.IndexModel

@{
  ViewData["Title"] = $"{Model.StudentGroup.Name} - Details";
}

@section Styles
{
  <link rel="stylesheet" href="~/css/group.css">
}

@section Scripts
{
  <script src="~/js/studentName.js"></script>
}

<div class="row">
  <aside class="col-sm-12 col-md-2">
    <nav id="group-nav" class="navbar navbar-light position-sticky top-0">
      <nav class="nav nav-pills flex-column">
        <a class="nav-link" href="#group">Group</a>
        <a class="nav-link" href="#milestones">Milestones</a>
        <a class="nav-link" href="#students">Students</a>
      </nav>
    </nav>
  </aside>

  <section class="col-sm-12 col-md-10">
    <div>
      <a asp-page="../Index">Groups</a> >
      @Model.StudentGroup.Name (<a asp-page="../Edit" asp-route-id="@Model.StudentGroup.Id">Edit</a>)
    </div>

    <h1 id="group">@Html.DisplayFor(model => model.StudentGroup.Name)</h1>
    <hr/>

    <dl class="row">
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.StudentGroup.Name)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.StudentGroup.Name)
      </dd>
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.StudentGroup.Mnemonic)
      </dt>
      <dd class="col-sm-10 feedback-text">
        @Html.DisplayFor(model => model.StudentGroup.Mnemonic)
      </dd>

      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.StudentGroup.CreatedAt)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.StudentGroup.CreatedAt)
      </dd>
      <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.StudentGroup.UpdatedAt)
      </dt>
      <dd class="col-sm-10">
        @Html.DisplayFor(model => model.StudentGroup.UpdatedAt)
      </dd>
    </dl>

    <div id="milestones" class="d-flex">
      <h2>Milestones</h2>
      <a class="btn btn-link btn-sm" asp-page="./AddMilestone" asp-route-id="@Model.StudentGroup.Id">Add new</a>
    </div>
    @if (!Model.StudentGroup.Milestones.Any())
    {
      <p>There are no milestones yet</p>
    }
    else
    {
      <table class="table">
        <thead>
        <tr>
          <th id="milestone-artefact">@Html.DisplayNameFor(m => m.StudentGroup.Milestones.FirstOrDefault().Artefact)</th>
          <th id="milestone-actions"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var milestoneGrouping in Model.StudentGroup.Milestones.ToLookup(m => m.LearningOutcome))
        {
          <tr>
            <td class="text-muted fw-light" headers="milestone-learning-outcome" colspan="2">@milestoneGrouping.Key</td>
          </tr>
          @foreach (var milestone in milestoneGrouping.ToList())
          {
            <tr>
              <td headers="milestone-artefact" class="ps-4">@milestone.Artefact</td>
              <td headers="milestone-actions">
                <a asp-page="/milestones/edit" asp-route-id="@milestone.Id" asp-route-groupId="@Model.StudentGroup.Id">Edit</a> |
                <a asp-page="/milestones/delete" asp-route-id="@milestone.Id" asp-route-groupId="@Model.StudentGroup.Id">Delete</a>
              </td>
            </tr>
          }
        }
        </tbody>
      </table>
    }

    <section id="students">
      <div class="d-flex">
        <h2>Students</h2>
        <a class="btn btn-link btn-sm" asp-page="./AddStudent" asp-route-groupId="@Model.StudentGroup.Id">Add new</a>
      </div>

      @if (!Model.StudentGroup.Students.Any())
      {
        <p>There are no students yet</p>
      }
      else
      {
        <table class="table">
          <caption>Table showing the students for this group</caption>
          <thead>
          <tr>
            <th id="student-name">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().Name)</th>
            <th id="student-timeline">Timeline</th>
            <th id="student-amount-of-progress">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().AmountOfProgressItems)</th>
            <th id="student-last-feedforward">@Html.DisplayNameFor(model => model.StudentGroup.Students.FirstOrDefault().LastFeedforward)</th>
          </tr>
          </thead>
          <tbody>
          @foreach (var student in Model.StudentGroup.Students)
          {
            <tr>
              <td x-data="initStudentNameController()" class="student-name" headers="student-name">
                <input x-ref="nameOriginal" type="hidden" value="@student.Name"/>
                <a x-show="!isEditing" x-ref="nameDisplay" class="me-3" asp-page="/Progress/Summary" asp-route-studentId="@student.Id" asp-route-groupId="@Model.StudentGroup.Id">@Html.DisplayFor(_ => student.Name)</a>
                <form x-show="isEditing" x-ref="form">
                  <input name="id" type="hidden" value="@student.Id"/>
                  <div class="d-inline-flex">
                    <input x-ref="nameInput" name="name" type="text" class="form-control" value="@student.Name" x-on:keydown.enter="updateName" x-on:keydown.escape="cancelEditing">
                    <button x-on:click="updateName" type="submit" class="btn btn-link">
                      <svg-inject src="lib/bootstrap-icons/save.svg"></svg-inject>
                    </button>
                  </div>
                </form>
                <span x-show="!isEditing" x-on:click="startEditing" class="name-edit">
                  <svg-inject src="lib/bootstrap-icons/pen.svg"></svg-inject>
                </span>
              </td>
              <td headers="student-amount-of-progress" class="student-timeline align-middle">
                <partial name="Shared/_ProgressTimeline" model="new ProgressTimeline(Model.StudentGroup.Period, student.ProgressUpdates.Select(u => new ProgressUpdateUI(u.Id, u.Date, u.Feeling, u.StudentId, u.GroupId)))"/>
              </td>
              <td headers="student-amount-of-progress">
                <a asp-page="/Progress/Index" asp-route-studentId="@student.Id" asp-route-groupId="@Model.StudentGroup.Id">
                  @Html.DisplayFor(_ => student.AmountOfProgressItems)
                </a>
              </td>
              <td headers="student-last-feedforward" class="feedback-text">@Html.DisplayFor(_ => student.LastFeedforward)</td>
            </tr>
          }
          </tbody>
        </table>
      }
    </section>

  </section>
</div>